{"version":3,"sources":["../src/index.js"],"names":["app","upload","dest","dbUrl","process","env","DATABASE_URL","console","log","connection","createConnection","host","user","password","database","dbIniter","initDB","documents","insert","selectAll","selectById","update","highlights","delete","selectByDocumentAndUser","buildFolderPath","resolve","__dirname","use","static","json","get","req","res","query","format","params","documentId","userId","error","results","fields","sendStatus","body","id","post","start","end","class","container","download","path","title","parseInt","field","single","file","originalname","mimetype","encoding","insertId","sendFile","set","PORT","listen"],"mappings":"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","file":"index.js","sourcesContent":["import bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport express from 'express';\nimport session from 'express-session';\nimport mysql from 'mysql';\nimport morgan from 'morgan';\nimport multer from 'multer';\nimport passport from 'passport';\nimport GoogleAuth from 'passport-google-oauth2';\nimport path from 'path';\nimport DbIniter from './db/db';\n\nlet app = express();\nlet upload = multer({ dest: 'uploads/' });\n\n\nlet dbUrl = process.env.DATABASE_URL;\nconsole.log('DATABASE_URL', dbUrl);\nlet connection;\nif (dbUrl) {\n  connection = mysql.createConnection(dbUrl);\n} else {\n  connection = mysql.createConnection({\n    host: 'localhost',\n    user: 'root',\n    password: 'root',\n    database: 'wimer'\n  })\n}\nlet dbIniter = new DbIniter(connection);\ndbIniter.initDB();\n\nlet documents = {\n  insert:\n  'INSERT INTO documents \\\n     VALUES (?, ?, ?, ?, ?)',\n  selectAll:\n  'SELECT * \\\n     FROM documents',\n  selectById:\n  'SELECT * \\\n     FROM documents \\\n     WHERE id = ?',\n  update:\n  'UPDATE documents \\\n     SET title = ? \\\n     WHERE id = ?',\n}\n\nlet highlights = {\n  insert:\n  'INSERT INTO highlights \\\n     VALUES (?, ?, ?, ?, ?, ?, ?)',\n  delete:\n  'DELETE FROM highlights \\\n     WHERE id = ? \\\n     AND document_id = ? \\\n     AND user_id = ?',\n  selectByDocumentAndUser:\n  'SELECT * \\\n     FROM highlights \\\n     WHERE document_id = ? \\\n     AND user_id = ?',\n}\n\n\nlet buildFolderPath = dbUrl ? path.resolve(__dirname, './', 'WimerReact/build')\n  : path.resolve(__dirname, '..', 'WimerReact/build')\n// logger\napp.use(morgan(':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] :response-time ms'));\n// Serve static assets\napp.use(express.static(buildFolderPath));\napp.use(bodyParser.json());\n\napp.get('/highlight/:documentId/:userId', (req, res) => {\n  connection.query(mysql.format(highlights.selectByDocumentAndUser,\n    [\n      req.params.documentId,\n      req.params.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.delete('/highlight', (req, res) => {\n  connection.query(mysql.format(highlights.delete,\n    [\n      req.body.id,\n      req.body.documentId,\n      req.body.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(fields);\n      res.sendStatus(200);\n    }\n  )\n})\n\napp.post('/highlight', (req, res) => {\n  // save highlight from body\n  connection.query(mysql.format(highlights.insert,\n    [\n      req.body.id,\n      req.body.start,\n      req.body.end,\n      req.body.class,\n      req.body.container,\n      req.body.documentId,\n      req.body.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.sendStatus(200);\n    }\n  )\n})\n\napp.get('/documents/download/:id', (req, res) => {\n  console.log(mysql.format(documents.selectById, [req.params.id]));\n  connection.query(mysql.format(documents.selectById, [req.params.id]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.download(results[0].path);\n    }\n  )\n})\n\napp.post('/documents/update/:id', (req, res) => {\n  connection.query(mysql.format(documents.update, [req.body.title, req.params.id]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.get('/documents/:id', (req, res) => {\n  connection.query(mysql.format(documents.selectById, [parseInt(req.params.id, 10)]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.get('/documents', (req, res) => {\n  connection.query(documents.selectAll,\n    (error, results, field) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.post('/upload', upload.single('doc'), (req, res) => {\n  let file = req.file;\n  // save document info to db\n  connection.query(mysql.format(documents.insert,\n    [\n      0,\n      file.originalname,\n      file.path,\n      file.mimetype,\n      file.encoding,\n    ]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json({ id: results.insertId });\n    }\n  )\n})\n\n\n// Always return the main index.html, so react-router render the route in the client\napp.get('*', (req, res) => {\n  console.log(\"dirname:\", __dirname)\n  console.log('--------- INDEX.HTML path:', path.resolve(__dirname, '..', 'WimerReact/build', 'index.html'));\n  console.log('--------- INDEX.HTML path:', path.resolve(__dirname, './', 'WimerReact/build', 'index.html'));\n  if (dbUrl) {\n    res.sendFile(path.resolve(buildFolderPath, 'index.html'));\n  } else {\n    res.sendFile(path.resolve(buildFolderPath, 'index.html'));\n  }\n});\n\napp.set('port', (process.env.PORT || 3001));\n\napp.listen(app.get('port'), () => {\n  console.log(`App listening on port ${app.get(\"port\")}!`);\n});"]}