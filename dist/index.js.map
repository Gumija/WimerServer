{"version":3,"sources":["../src/index.js"],"names":["GOOGLE_CLIENT_ID","process","env","GOOGLE_CLIENT_SECRET","documents","insert","selectAllByUser","selectByDocumentId","selectById","update","highlights","delete","selectByDocumentAndUser","users","selectByGoogleId","dbIniter","initDB","serializeUser","user","done","console","log","id","deserializeUser","obj","query","format","error","results","fields","use","OAuth2Strategy","clientID","clientSecret","callbackURL","passReqToCallback","request","accessToken","refreshToken","profile","nextTick","length","displayName","emails","find","email","type","value","insertId","name","google_id","app","upload","dest","buildFolderPath","DATABASE_URL","resolve","__dirname","static","json","secret","resave","saveUninitialized","initialize","session","get","req","res","next","header","authenticate","scope","approvalPrompt","successRedirect","failureRedirect","logout","sendStatus","params","documentId","userId","body","post","start","end","class","container","download","path","title","parseInt","mimetype","encoding","sessonIdName","sessionID","cookie","cookies","signedCookies","isAuthenticated","field","single","file","originalname","sendFile","set","PORT","listen"],"mappings":"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","file":"index.js","sourcesContent":["import bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport express from 'express';\nimport session from 'express-session';\nimport morgan from 'morgan';\nimport mysql from 'mysql';\nimport multer from 'multer';\nimport passport from 'passport';\nimport GoogleAuth from 'passport-google-oauth';\nimport path from 'path';\nimport DbIniter from './db/db';\n\n// API Access link for creating client ID and secret:\n// https://code.google.com/apis/console/\nvar GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID\n  , GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;\n\nlet documents = {\n  insert:\n  'INSERT INTO documents \\\n     VALUES (?, ?, ?, ?, ?, ?)',\n  selectAllByUser:\n  'SELECT * \\\n   FROM documents \\\n   WHERE user_id = ?',\n  selectByDocumentId:\n  'SELECT * \\\n    FROM documents \\\n    WHERE id = ?',\n  selectById:\n  'SELECT * \\\n     FROM documents \\\n     WHERE id = ?\\\n     AND user_id = ?',\n  update:\n  'UPDATE documents \\\n     SET title = ? \\\n     WHERE id = ? \\\n     AND user_id = ?',\n}\n\nlet highlights = {\n  insert:\n  'INSERT INTO highlights \\\n     VALUES (?, ?, ?, ?, ?, ?, ?)',\n  delete:\n  'DELETE FROM highlights \\\n     WHERE id = ? \\\n     AND document_id = ? \\\n     AND user_id = ?',\n  selectByDocumentAndUser:\n  'SELECT * \\\n     FROM highlights \\\n     WHERE document_id = ? \\\n     AND user_id = ?',\n}\n\nlet users = {\n  selectByGoogleId:\n  'SELECT * \\\n   FROM users \\\n   WHERE google_id = ?',\n  selectById:\n  'SELECT * \\\n   FROM users \\\n   WHERE id = ?',\n  insert:\n  'INSERT INTO users \\\n    VALUES (0, ?, ?, ?)',\n  update:\n  'UPDATE user \\\n   SET name = ?, email = ?, google_id = ? \\\n   WHERE id = ?'\n}\n\nlet dbIniter = new DbIniter();\ndbIniter.initDB();\n\n// Passport session setup.\n//   To support persistent login sessions, Passport needs to be able to\n//   serialize users into and deserialize users out of the session.  Typically,\n//   this will be as simple as storing the user ID when serializing, and finding\n//   the user by ID when deserializing.  However, since this example does not\n//   have a database of user records, the complete Google profile is\n//   serialized and deserialized.\npassport.serializeUser(function (user, done) {\n  console.log('Serialize:', user.id)\n  done(null, user.id);\n});\n\npassport.deserializeUser(function (obj, done) {\n  dbIniter.query(mysql.format(users.selectById, [obj]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        done(error);\n        return;\n      }\n      console.log(`Deserialize user by user id, ${obj}`, results);\n      return done(null, results[0]);\n    });\n});\n\n// Use the GoogleStrategy within Passport.\n//   Strategies in Passport require a `verify` function, which accept\n//   credentials (in this case, an accessToken, refreshToken, and Google\n//   profile), and invoke a callback with a user object.\npassport.use(new GoogleAuth.OAuth2Strategy({\n  clientID: GOOGLE_CLIENT_ID,\n  clientSecret: GOOGLE_CLIENT_SECRET,\n  callbackURL: \"http://morning-stream-82096.herokuapp.com/auth/google/callback\",\n  passReqToCallback: true\n},\n  (request, accessToken, refreshToken, profile, done) => {\n    console.log('Access Token: ', accessToken)\n    console.log('Refresh Token: ', refreshToken)\n    process.nextTick(() => {\n      // Check if user exists with google id\n      dbIniter.query(mysql.format(users.selectByGoogleId, [profile.id]),\n        (error, results, fields) => {\n          if (error) {\n            console.log(error);\n            done(error);\n            return;\n          }\n          console.log(`Get user by googleId ${profile.id}`, results);\n          if (results.length) {\n            return done(null, results[0]);\n          } else {\n            // Add new user to database\n            dbIniter.query(mysql.format(users.insert,\n              [\n                profile.displayName,\n                profile.emails.find((email) => email.type == 'account').value,\n                profile.id,\n              ]),\n              (error, results, fields) => {\n                if (error) {\n                  console.log(error);\n                  done(error);\n                  return;\n                }\n                console.log(`Inserted user`, results);\n                return done(null, {\n                  id: results.insertId,\n                  name: profile.displayName,\n                  email: profile.emails.find((email) => email.type == 'account').value,\n                  google_id: profile.id,\n                });\n              }\n            )\n          }\n        }\n      )\n    })\n  }\n));\n\n\n\nlet app = express();\nlet upload = multer({ dest: 'uploads/' });\n\nlet buildFolderPath = process.env.DATABASE_URL ? path.resolve(__dirname, './', 'WimerReact/build')\n  : path.resolve(__dirname, '..', 'WimerReact/build')\n// logger\napp.use(morgan(':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] :response-time ms'));\n// Serve static assets\napp.use(express.static(buildFolderPath));\napp.use(cookieParser());\napp.use(bodyParser.json());\napp.use(session({\n  secret: 'cookie_secret',\n  resave: true,\n  saveUninitialized: true,\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n// GET /auth/google\n//   Use passport.authenticate() as route middleware to authenticate the\n//   request.  The first step in Google authentication will involve\n//   redirecting the user to google.com.  After authorization, Google\n//   will redirect the user back to this application at /auth/google/callback\napp.get('/auth/google', (req, res, next) => {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n},\n  passport.authenticate('google', {\n    scope: [\n      'https://www.googleapis.com/auth/plus.login',\n      'https://www.googleapis.com/auth/plus.profile.emails.read'],\n    approvalPrompt: 'force'\n  }));\n\n// GET /auth/google/callback\n//   Use passport.authenticate() as route middleware to authenticate the\n//   request.  If authentication fails, the user will be redirected back to the\n//   login page.  Otherwise, the primary route function function will be called,\n//   which, in this example, will redirect the user to the home page.\napp.get('/auth/google/callback',\n  passport.authenticate('google', {\n    successRedirect: 'back',\n    failureRedirect: 'back',\n  }));\n\napp.get('/logout', (req, res) => {\n  req.logout();\n  res.sendStatus(200);\n})\n\napp.get('/highlight/:documentId/:userId', (req, res) => {\n  dbIniter.query(mysql.format(highlights.selectByDocumentAndUser,\n    [\n      req.params.documentId,\n      req.params.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.delete('/highlight', (req, res) => {\n  if (req.body.userId == req.user.id) {\n    dbIniter.query(mysql.format(highlights.delete,\n      [\n        req.body.id,\n        req.body.documentId,\n        req.body.userId,\n      ]\n    ),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(fields);\n        res.sendStatus(200);\n      }\n    )\n  } else {\n    res.sendStatus(403); // 403 Forbidden\n  }\n})\n\napp.post('/highlight', (req, res) => {\n  if (req.body.userId == req.user.id) {\n\n    // save highlight from body\n    dbIniter.query(mysql.format(highlights.insert,\n      [\n        req.body.id,\n        req.body.start,\n        req.body.end,\n        req.body.class,\n        req.body.container,\n        req.body.documentId,\n        req.body.userId,\n      ]\n    ),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        res.sendStatus(200);\n      }\n    )\n  } else {\n    res.sendStatus(403); // 403 Forbidden\n  }\n})\n\napp.get('/documents/download/:id', (req, res) => {\n  console.log(mysql.format(documents.selectByDocumentId, [req.params.id]));\n  dbIniter.query(mysql.format(documents.selectByDocumentId, [req.params.id]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.download(results[0].path);\n    }\n  )\n})\n\napp.post('/documents/update/:id', (req, res) => {\n  if (req.user) {\n    dbIniter.query(mysql.format(documents.update, [req.body.title, req.params.id, req.user.id]),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        res.json(results);\n      }\n    )\n  } else {\n    res.json([]);\n  }\n})\n\napp.get('/documents/:documentId/:userId', (req, res) => {\n  dbIniter.query(mysql.format(documents.selectById,\n    [\n      parseInt(req.params.documentId, 10),\n      parseInt(req.params.userId, 10)\n    ]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.post('/documents/:documentId', (req, res) => {\n  if (req.user) {\n    dbIniter.query(mysql.format(documents.selectById, [req.params.documentId, req.user.id]),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        if (results.length) {\n          dbIniter.query(mysql.format(documents.insert,\n            [\n              0,\n              results[0].title,\n              results[0].path,\n              results[0].mimetype,\n              results[0].encoding,\n              req.user.id,\n            ]),\n            (error, results, fields) => {\n              if (error) {\n                console.log(error);\n                res.sendStatus(500);\n                return;\n              }\n              console.log(results);\n              res.json({ id: results.insertId });\n            }\n          )\n        } else {\n          res.sendStatus(500);\n        }\n      })\n  } else {\n    res.sendStatus(403) // 403 Forbidden\n  }\n})\n\napp.get('/documents',\n  (req, res) => {\n    console.log('-------- DOCUMENTS --------');\n    console.log('Session', req.session);\n    console.log('SessionIdName: ', req.session.sessonIdName)\n    console.log('SessionId: ', req.session.id)\n    console.log('SessionId: ', req.sessionID)\n    console.log('SessionCookie: ', req.session.cookie)\n    console.log('Cookies: ', req.cookies)\n    console.log('Signed Cookies: ', req.signedCookies)\n    console.log('Auth: ', req.isAuthenticated());\n    console.log('User: ', req.user);\n    if (req.user) {\n      dbIniter.query(mysql.format(documents.selectAllByUser, [req.user.id]),\n        (error, results, field) => {\n          if (error) {\n            console.log(error);\n            res.sendStatus(500);\n            return;\n          }\n          console.log(results);\n          res.json(results);\n        }\n      )\n    } else {\n      res.json({});\n    }\n  })\n\napp.post('/upload', upload.single('doc'), (req, res) => {\n  if (req.user) {\n    let file = req.file;\n    // save document info to db\n    dbIniter.query(mysql.format(documents.insert,\n      [\n        0,\n        file.originalname,\n        file.path,\n        file.mimetype,\n        file.encoding,\n        req.user.id,\n      ]),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        res.json({ id: results.insertId });\n      }\n    )\n  } else {\n    res.sendStatus(403); // 403 Forbidden\n  }\n})\n\napp.get('/user', (req, res) => {\n  if (req.user) {\n    res.json(req.user);\n  } else {\n    res.json({});\n  }\n})\n\n// Always return the main index.html, so react-router render the route in the client\napp.get('*', (req, res) => {\n  console.log(\"dirname:\", __dirname)\n  console.log('--------- INDEX.HTML path:', path.resolve(__dirname, '..', 'WimerReact/build', 'index.html'));\n  console.log('--------- INDEX.HTML path:', path.resolve(__dirname, './', 'WimerReact/build', 'index.html'));\n  if (process.env.DATABASE_URL) {\n    res.sendFile(path.resolve(buildFolderPath, 'index.html'));\n  } else {\n    res.sendFile(path.resolve(buildFolderPath, 'index.html'));\n  }\n});\n\napp.set('port', (process.env.PORT || 3001));\n\napp.listen(app.get('port'), () => {\n  console.log(`App listening on port ${app.get(\"port\")}!`);\n});"]}