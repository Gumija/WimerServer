{"version":3,"sources":["../src/index.js"],"names":["GOOGLE_CLIENT_ID","process","env","GOOGLE_CLIENT_SECRET","console","log","serializeUser","user","done","deserializeUser","obj","use","OAuth2Strategy","clientID","clientSecret","callbackURL","passReqToCallback","request","accessToken","refreshToken","profile","dbIniter","initDB","documents","insert","selectAll","selectById","update","highlights","delete","selectByDocumentAndUser","app","upload","dest","buildFolderPath","DATABASE_URL","resolve","__dirname","static","json","secret","name","proxy","resave","saveUninitialized","initialize","session","get","authenticate","scope","failureRedirect","req","res","redirect","query","format","params","documentId","userId","error","results","fields","sendStatus","body","id","post","start","end","class","container","download","path","title","parseInt","isAuthenticated","field","single","file","originalname","mimetype","encoding","insertId","sendFile","set","PORT","listen"],"mappings":"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","file":"index.js","sourcesContent":["import bodyParser from 'body-parser';\nimport express from 'express';\nimport session from 'express-session';\nimport morgan from 'morgan';\nimport mysql from 'mysql';\nimport multer from 'multer';\nimport passport from 'passport';\nimport GoogleAuth from 'passport-google-oauth';\nimport path from 'path';\nimport DbIniter from './db/db';\n\n// API Access link for creating client ID and secret:\n// https://code.google.com/apis/console/\nvar GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID\n  , GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;\nconsole.log('GOOGLE STUFF:', GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET);\n// Passport session setup.\n//   To support persistent login sessions, Passport needs to be able to\n//   serialize users into and deserialize users out of the session.  Typically,\n//   this will be as simple as storing the user ID when serializing, and finding\n//   the user by ID when deserializing.  However, since this example does not\n//   have a database of user records, the complete Google profile is\n//   serialized and deserialized.\npassport.serializeUser(function (user, done) {\n  console.log('Serialize', user);\n  done(null, user);\n});\n\npassport.deserializeUser(function (obj, done) {\n  console.log('Deserialize', obj);\n  done(null, obj);\n});\n\n// Use the GoogleStrategy within Passport.\n//   Strategies in Passport require a `verify` function, which accept\n//   credentials (in this case, an accessToken, refreshToken, and Google\n//   profile), and invoke a callback with a user object.\npassport.use(new GoogleAuth.OAuth2Strategy({\n  clientID: GOOGLE_CLIENT_ID,\n  clientSecret: GOOGLE_CLIENT_SECRET,\n  callbackURL: \"http://morning-stream-82096.herokuapp.com/auth/google/callback\",\n  passReqToCallback: true\n},\n  function (request, accessToken, refreshToken, profile, done) {\n    console.log('verificatoin???', accessToken, refreshToken, profile, done);\n\n    // To keep the example simple, the user's Google profile is returned to\n    // represent the logged-in user.  In a typical application, you would want\n    // to associate the Google account with a user record in your database,\n    // and return that user instead.\n    console.log('Profile', profile)\n    return done(null, profile);\n  }\n));\n\nlet dbIniter = new DbIniter();\ndbIniter.initDB();\n\nlet documents = {\n  insert:\n  'INSERT INTO documents \\\n     VALUES (?, ?, ?, ?, ?)',\n  selectAll:\n  'SELECT * \\\n     FROM documents',\n  selectById:\n  'SELECT * \\\n     FROM documents \\\n     WHERE id = ?',\n  update:\n  'UPDATE documents \\\n     SET title = ? \\\n     WHERE id = ?',\n}\n\nlet highlights = {\n  insert:\n  'INSERT INTO highlights \\\n     VALUES (?, ?, ?, ?, ?, ?, ?)',\n  delete:\n  'DELETE FROM highlights \\\n     WHERE id = ? \\\n     AND document_id = ? \\\n     AND user_id = ?',\n  selectByDocumentAndUser:\n  'SELECT * \\\n     FROM highlights \\\n     WHERE document_id = ? \\\n     AND user_id = ?',\n}\n\nlet app = express();\nlet upload = multer({ dest: 'uploads/' });\n\nlet buildFolderPath = process.env.DATABASE_URL ? path.resolve(__dirname, './', 'WimerReact/build')\n  : path.resolve(__dirname, '..', 'WimerReact/build')\n// logger\napp.use(morgan(':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] :response-time ms'));\n// Serve static assets\napp.use(express.static(buildFolderPath));\napp.use(bodyParser.json());\napp.use(session({\n  secret: 'cookie_secret',\n  name: 'sessonIdName',\n  proxy: true,\n  resave: true,\n  saveUninitialized: true\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n// GET /auth/google\n//   Use passport.authenticate() as route middleware to authenticate the\n//   request.  The first step in Google authentication will involve\n//   redirecting the user to google.com.  After authorization, Google\n//   will redirect the user back to this application at /auth/google/callback\napp.get('/auth/google', passport.authenticate('google', {\n  scope: [\n    'https://www.googleapis.com/auth/plus.login',\n    'https://www.googleapis.com/auth/plus.profile.emails.read']\n}));\n\n// GET /auth/google/callback\n//   Use passport.authenticate() as route middleware to authenticate the\n//   request.  If authentication fails, the user will be redirected back to the\n//   login page.  Otherwise, the primary route function function will be called,\n//   which, in this example, will redirect the user to the home page.\napp.get('/auth/google/callback', \n  passport.authenticate('google', { failureRedirect: '/login' }),\n  function(req, res) {\n    res.redirect('/');\n  });\n\n//   app.get('/auth/google/callback', function(req, res, next) {\n//   passport.authenticate('google', function(err, user, info) {\n//     console.log('User', user);\n//     console.log('Info:', info);\n//     if (err) { console.log(err); return next(err); }\n//     if (!user) { console.log('No user'); return res.redirect('/'); }\n//     req.login(user, function(err) {\n//       if (err) { console.log(err); return next(err); }\n//       return res.redirect('/');\n//     });\n//   })(req, res, next);\n// });\n\n\n\n\napp.get('/highlight/:documentId/:userId', (req, res) => {\n  dbIniter.query(mysql.format(highlights.selectByDocumentAndUser,\n    [\n      req.params.documentId,\n      req.params.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.delete('/highlight', (req, res) => {\n  dbIniter.query(mysql.format(highlights.delete,\n    [\n      req.body.id,\n      req.body.documentId,\n      req.body.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(fields);\n      res.sendStatus(200);\n    }\n  )\n})\n\napp.post('/highlight', (req, res) => {\n  // save highlight from body\n  dbIniter.query(mysql.format(highlights.insert,\n    [\n      req.body.id,\n      req.body.start,\n      req.body.end,\n      req.body.class,\n      req.body.container,\n      req.body.documentId,\n      req.body.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.sendStatus(200);\n    }\n  )\n})\n\napp.get('/documents/download/:id', (req, res) => {\n  console.log(mysql.format(documents.selectById, [req.params.id]));\n  dbIniter.query(mysql.format(documents.selectById, [req.params.id]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.download(results[0].path);\n    }\n  )\n})\n\napp.post('/documents/update/:id', (req, res) => {\n  dbIniter.query(mysql.format(documents.update, [req.body.title, req.params.id]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.get('/documents/:id', (req, res) => {\n  dbIniter.query(mysql.format(documents.selectById, [parseInt(req.params.id, 10)]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.get('/documents', (req, res) => {\n  console.log('------ Session', req.session);\n  console.log('Auth: ', req.isAuthenticated());\n  console.log('User: ', req.user);\n  dbIniter.query(documents.selectAll,\n    (error, results, field) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log('------ Session', req.session);\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.post('/upload', upload.single('doc'), (req, res) => {\n  let file = req.file;\n  // save document info to db\n  dbIniter.query(mysql.format(documents.insert,\n    [\n      0,\n      file.originalname,\n      file.path,\n      file.mimetype,\n      file.encoding,\n    ]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json({ id: results.insertId });\n    }\n  )\n})\n\n\n// Always return the main index.html, so react-router render the route in the client\napp.get('*', (req, res) => {\n  console.log('------ Session', req.session);\n  console.log(\"dirname:\", __dirname)\n  console.log('--------- INDEX.HTML path:', path.resolve(__dirname, '..', 'WimerReact/build', 'index.html'));\n  console.log('--------- INDEX.HTML path:', path.resolve(__dirname, './', 'WimerReact/build', 'index.html'));\n  if (process.env.DATABASE_URL) {\n    res.sendFile(path.resolve(buildFolderPath, 'index.html'));\n  } else {\n    res.sendFile(path.resolve(buildFolderPath, 'index.html'));\n  }\n});\n\napp.set('port', (process.env.PORT || 3001));\n\napp.listen(app.get('port'), () => {\n  console.log(`App listening on port ${app.get(\"port\")}!`);\n});"]}