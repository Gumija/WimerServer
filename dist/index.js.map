{"version":3,"sources":["../src/index.js"],"names":["GOOGLE_CLIENT_ID","process","env","GOOGLE_CLIENT_SECRET","documents","insert","selectAll","selectById","update","highlights","delete","selectByDocumentAndUser","users","selectByGoogleId","dbIniter","initDB","serializeUser","user","done","console","log","id","deserializeUser","obj","query","format","error","results","fields","use","OAuth2Strategy","clientID","clientSecret","callbackURL","passReqToCallback","request","accessToken","refreshToken","profile","nextTick","displayName","emails","find","email","type","value","app","upload","dest","buildFolderPath","DATABASE_URL","resolve","__dirname","static","json","secret","resave","saveUninitialized","initialize","session","get","authenticate","scope","failureRedirect","req","res","redirect","params","documentId","userId","sendStatus","body","post","start","end","class","container","download","path","title","parseInt","sessonIdName","sessionID","cookie","cookies","signedCookies","isAuthenticated","field","single","file","originalname","mimetype","encoding","insertId","sendFile","set","PORT","listen"],"mappings":"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","file":"index.js","sourcesContent":["import bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport express from 'express';\nimport session from 'express-session';\nimport morgan from 'morgan';\nimport mysql from 'mysql';\nimport multer from 'multer';\nimport passport from 'passport';\nimport GoogleAuth from 'passport-google-oauth';\nimport path from 'path';\nimport DbIniter from './db/db';\n\n// API Access link for creating client ID and secret:\n// https://code.google.com/apis/console/\nvar GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID\n  , GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;\n\nlet documents = {\n  insert:\n  'INSERT INTO documents \\\n     VALUES (?, ?, ?, ?, ?)',\n  selectAll:\n  'SELECT * \\\n     FROM documents',\n  selectById:\n  'SELECT * \\\n     FROM documents \\\n     WHERE id = ?',\n  update:\n  'UPDATE documents \\\n     SET title = ? \\\n     WHERE id = ?',\n}\n\nlet highlights = {\n  insert:\n  'INSERT INTO highlights \\\n     VALUES (?, ?, ?, ?, ?, ?, ?)',\n  delete:\n  'DELETE FROM highlights \\\n     WHERE id = ? \\\n     AND document_id = ? \\\n     AND user_id = ?',\n  selectByDocumentAndUser:\n  'SELECT * \\\n     FROM highlights \\\n     WHERE document_id = ? \\\n     AND user_id = ?',\n}\n\nlet users = {\n  selectByGoogleId:\n  'SELECT * \\\n   FROM users \\\n   WHERE google_id = ?',\n  selectById:\n  'SELECT * \\\n   FROM users \\\n   WHERE id = ?',\n  insert:\n  'INSERT INTO users \\\n    VALUES (0, ?, ?, ?)'\n}\n\nlet dbIniter = new DbIniter();\ndbIniter.initDB();\n\n// Passport session setup.\n//   To support persistent login sessions, Passport needs to be able to\n//   serialize users into and deserialize users out of the session.  Typically,\n//   this will be as simple as storing the user ID when serializing, and finding\n//   the user by ID when deserializing.  However, since this example does not\n//   have a database of user records, the complete Google profile is\n//   serialized and deserialized.\npassport.serializeUser(function (user, done) {\n  console.log('Serialize:', user.id)\n  done(null, user.id);\n});\n\npassport.deserializeUser(function (obj, done) {\n  dbIniter.query(mysql.format(users.selectById, [obj]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        done(error);\n        return;\n      }\n      console.log(`Deserialize user by user id, ${obj}`, results);\n      return done(null, results[0]);\n    });\n});\n\n// Use the GoogleStrategy within Passport.\n//   Strategies in Passport require a `verify` function, which accept\n//   credentials (in this case, an accessToken, refreshToken, and Google\n//   profile), and invoke a callback with a user object.\npassport.use(new GoogleAuth.OAuth2Strategy({\n  clientID: GOOGLE_CLIENT_ID,\n  clientSecret: GOOGLE_CLIENT_SECRET,\n  callbackURL: \"http://morning-stream-82096.herokuapp.com/auth/google/callback\",\n  passReqToCallback: true\n},\n  (request, accessToken, refreshToken, profile, done) => {\n    process.nextTick(() => {\n      // Check if user exists with google id\n      dbIniter.query(mysql.format(users.selectByGoogleId, [profile.id]),\n        (error, results, fields) => {\n          if (error) {\n            console.log(error);\n            done(error);\n            return;\n          }\n          console.log(`Get user by googleId ${profile.id}`, results);\n          if (results) {\n            return done(null, results[0]);\n          } else {\n            // Add new user to database\n            dbIniter.query(mysql.format(users.insert,\n              [\n                profile.displayName,\n                profile.emails.find((email) => email.type == 'account').value,\n                profile.id,\n              ]),\n              (error, results, fields) => {\n                if (error) {\n                  console.log(error);\n                  done(error);\n                  return;\n                }\n                console.log(`Inserted user`, results);\n                return done(null, results[0]);\n              }\n            )\n          }\n        }\n      )\n    })\n  }\n));\n\n\n\nlet app = express();\nlet upload = multer({ dest: 'uploads/' });\n\nlet buildFolderPath = process.env.DATABASE_URL ? path.resolve(__dirname, './', 'WimerReact/build')\n  : path.resolve(__dirname, '..', 'WimerReact/build')\n// logger\napp.use(morgan(':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] :response-time ms'));\n// Serve static assets\napp.use(express.static(buildFolderPath));\napp.use(cookieParser());\napp.use(bodyParser.json());\napp.use(session({\n  secret: 'cookie_secret',\n  resave: true,\n  saveUninitialized: true,\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n// GET /auth/google\n//   Use passport.authenticate() as route middleware to authenticate the\n//   request.  The first step in Google authentication will involve\n//   redirecting the user to google.com.  After authorization, Google\n//   will redirect the user back to this application at /auth/google/callback\napp.get('/auth/google', passport.authenticate('google', {\n  scope: [\n    'https://www.googleapis.com/auth/plus.login',\n    'https://www.googleapis.com/auth/plus.profile.emails.read']\n}));\n\n// GET /auth/google/callback\n//   Use passport.authenticate() as route middleware to authenticate the\n//   request.  If authentication fails, the user will be redirected back to the\n//   login page.  Otherwise, the primary route function function will be called,\n//   which, in this example, will redirect the user to the home page.\napp.get('/auth/google/callback',\n  passport.authenticate('google', { failureRedirect: '/login' }),\n  function (req, res) {\n    res.redirect('/');\n  });\n\n//   app.get('/auth/google/callback', function(req, res, next) {\n//   passport.authenticate('google', function(err, user, info) {\n//     console.log('User', user);\n//     console.log('Info:', info);\n//     if (err) { console.log(err); return next(err); }\n//     if (!user) { console.log('No user'); return res.redirect('/'); }\n//     req.login(user, function(err) {\n//       if (err) { console.log(err); return next(err); }\n//       return res.redirect('/');\n//     });\n//   })(req, res, next);\n// });\n\n\n\n\napp.get('/highlight/:documentId/:userId', (req, res) => {\n  dbIniter.query(mysql.format(highlights.selectByDocumentAndUser,\n    [\n      req.params.documentId,\n      req.params.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.delete('/highlight', (req, res) => {\n  dbIniter.query(mysql.format(highlights.delete,\n    [\n      req.body.id,\n      req.body.documentId,\n      req.body.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(fields);\n      res.sendStatus(200);\n    }\n  )\n})\n\napp.post('/highlight', (req, res) => {\n  // save highlight from body\n  dbIniter.query(mysql.format(highlights.insert,\n    [\n      req.body.id,\n      req.body.start,\n      req.body.end,\n      req.body.class,\n      req.body.container,\n      req.body.documentId,\n      req.body.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.sendStatus(200);\n    }\n  )\n})\n\napp.get('/documents/download/:id', (req, res) => {\n  console.log(mysql.format(documents.selectById, [req.params.id]));\n  dbIniter.query(mysql.format(documents.selectById, [req.params.id]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.download(results[0].path);\n    }\n  )\n})\n\napp.post('/documents/update/:id', (req, res) => {\n  dbIniter.query(mysql.format(documents.update, [req.body.title, req.params.id]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.get('/documents/:id', (req, res) => {\n  dbIniter.query(mysql.format(documents.selectById, [parseInt(req.params.id, 10)]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.get('/documents',\n  (req, res) => {\n    console.log('-------- DOCUMENTS --------');\n    console.log('Session', req.session);\n    console.log('SessionIdName: ', req.session.sessonIdName)\n    console.log('SessionId: ', req.session.id)\n    console.log('SessionId: ', req.sessionID)\n    console.log('SessionCookie: ', req.session.cookie)\n    console.log('Cookies: ', req.cookies)\n    console.log('Signed Cookies: ', req.signedCookies)\n    console.log('Auth: ', req.isAuthenticated());\n    console.log('User: ', req.user);\n    dbIniter.query(documents.selectAll,\n      (error, results, field) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        res.json(results);\n      }\n    )\n  })\n\napp.post('/upload', upload.single('doc'), (req, res) => {\n  let file = req.file;\n  // save document info to db\n  dbIniter.query(mysql.format(documents.insert,\n    [\n      0,\n      file.originalname,\n      file.path,\n      file.mimetype,\n      file.encoding,\n    ]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json({ id: results.insertId });\n    }\n  )\n})\n\n// Always return the main index.html, so react-router render the route in the client\napp.get('*', (req, res) => {\n  console.log(\"dirname:\", __dirname)\n  console.log('--------- INDEX.HTML path:', path.resolve(__dirname, '..', 'WimerReact/build', 'index.html'));\n  console.log('--------- INDEX.HTML path:', path.resolve(__dirname, './', 'WimerReact/build', 'index.html'));\n  if (process.env.DATABASE_URL) {\n    res.sendFile(path.resolve(buildFolderPath, 'index.html'));\n  } else {\n    res.sendFile(path.resolve(buildFolderPath, 'index.html'));\n  }\n});\n\napp.set('port', (process.env.PORT || 3001));\n\napp.listen(app.get('port'), () => {\n  console.log(`App listening on port ${app.get(\"port\")}!`);\n});"]}