{"version":3,"sources":["../src/index.js"],"names":["app","upload","dest","dbIniter","initDB","documents","insert","selectAll","selectById","update","highlights","delete","selectByDocumentAndUser","buildFolderPath","process","env","DATABASE_URL","resolve","__dirname","use","static","json","get","req","res","query","format","params","documentId","userId","error","results","fields","console","log","sendStatus","body","id","post","start","end","class","container","download","path","title","parseInt","field","single","file","originalname","mimetype","encoding","insertId","dbUrl","sendFile","set","PORT","listen"],"mappings":"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","file":"index.js","sourcesContent":["import bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport express from 'express';\nimport session from 'express-session';\nimport morgan from 'morgan';\nimport mysql from 'mysql';\nimport multer from 'multer';\nimport passport from 'passport';\nimport GoogleAuth from 'passport-google-oauth2';\nimport path from 'path';\nimport DbIniter from './db/db';\n\nlet app = express();\nlet upload = multer({ dest: 'uploads/' });\n\n\nlet dbIniter = new DbIniter();\ndbIniter.initDB();\n\nlet documents = {\n  insert:\n  'INSERT INTO documents \\\n     VALUES (?, ?, ?, ?, ?)',\n  selectAll:\n  'SELECT * \\\n     FROM documents',\n  selectById:\n  'SELECT * \\\n     FROM documents \\\n     WHERE id = ?',\n  update:\n  'UPDATE documents \\\n     SET title = ? \\\n     WHERE id = ?',\n}\n\nlet highlights = {\n  insert:\n  'INSERT INTO highlights \\\n     VALUES (?, ?, ?, ?, ?, ?, ?)',\n  delete:\n  'DELETE FROM highlights \\\n     WHERE id = ? \\\n     AND document_id = ? \\\n     AND user_id = ?',\n  selectByDocumentAndUser:\n  'SELECT * \\\n     FROM highlights \\\n     WHERE document_id = ? \\\n     AND user_id = ?',\n}\n\n\nlet buildFolderPath = process.env.DATABASE_URL ? path.resolve(__dirname, './', 'WimerReact/build')\n  : path.resolve(__dirname, '..', 'WimerReact/build')\n// logger\napp.use(morgan(':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] :response-time ms'));\n// Serve static assets\napp.use(express.static(buildFolderPath));\napp.use(bodyParser.json());\n\napp.get('/highlight/:documentId/:userId', (req, res) => {\n  dbIniter.query(mysql.format(highlights.selectByDocumentAndUser,\n    [\n      req.params.documentId,\n      req.params.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.delete('/highlight', (req, res) => {\n  dbIniter.query(mysql.format(highlights.delete,\n    [\n      req.body.id,\n      req.body.documentId,\n      req.body.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(fields);\n      res.sendStatus(200);\n    }\n  )\n})\n\napp.post('/highlight', (req, res) => {\n  // save highlight from body\n  dbIniter.query(mysql.format(highlights.insert,\n    [\n      req.body.id,\n      req.body.start,\n      req.body.end,\n      req.body.class,\n      req.body.container,\n      req.body.documentId,\n      req.body.userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.sendStatus(200);\n    }\n  )\n})\n\napp.get('/documents/download/:id', (req, res) => {\n  console.log(mysql.format(documents.selectById, [req.params.id]));\n  dbIniter.query(mysql.format(documents.selectById, [req.params.id]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.download(results[0].path);\n    }\n  )\n})\n\napp.post('/documents/update/:id', (req, res) => {\n  dbIniter.query(mysql.format(documents.update, [req.body.title, req.params.id]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.get('/documents/:id', (req, res) => {\n  dbIniter.query(mysql.format(documents.selectById, [parseInt(req.params.id, 10)]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.get('/documents', (req, res) => {\n  dbIniter.query(documents.selectAll,\n    (error, results, field) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\napp.post('/upload', upload.single('doc'), (req, res) => {\n  let file = req.file;\n  // save document info to db\n  dbIniter.query(mysql.format(documents.insert,\n    [\n      0,\n      file.originalname,\n      file.path,\n      file.mimetype,\n      file.encoding,\n    ]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json({ id: results.insertId });\n    }\n  )\n})\n\n\n// Always return the main index.html, so react-router render the route in the client\napp.get('*', (req, res) => {\n  console.log(\"dirname:\", __dirname)\n  console.log('--------- INDEX.HTML path:', path.resolve(__dirname, '..', 'WimerReact/build', 'index.html'));\n  console.log('--------- INDEX.HTML path:', path.resolve(__dirname, './', 'WimerReact/build', 'index.html'));\n  if (dbUrl) {\n    res.sendFile(path.resolve(buildFolderPath, 'index.html'));\n  } else {\n    res.sendFile(path.resolve(buildFolderPath, 'index.html'));\n  }\n});\n\napp.set('port', (process.env.PORT || 3001));\n\napp.listen(app.get('port'), () => {\n  console.log(`App listening on port ${app.get(\"port\")}!`);\n});"]}