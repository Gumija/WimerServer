{"version":3,"sources":["../src/visits.js"],"names":["visits","insert","selectByUserId","router","Router","post","req","res","user","id","params","userId","console","log","body","format","documentId","Date","query","error","results","field","sendStatus","get","json"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,SAAS;AACXC,UACA;;oCAFW;AAKXC,kBACA;;;;;;AANW,CAAb;;AAcA,IAAIC,SAAS,kBAAQC,MAAR,EAAb;;AAEA;AACAD,OAAOE,IAAP,CAAY,sBAAZ,EAAoC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChD,MAAID,IAAIE,IAAJ,IAAYF,IAAIE,IAAJ,CAASC,EAAT,IAAeH,IAAII,MAAJ,CAAWC,MAA1C,EAAkD;AAChDC,YAAQC,GAAR,CAAY,UAAZ,EAAwBP,IAAII,MAA5B;AACAE,YAAQC,GAAR,CAAY,QAAZ,EAAsBP,IAAIQ,IAA1B;AACAF,YAAQC,GAAR,CAAY,gBAAME,MAAN,CAAaf,OAAOC,MAApB,EAA4B,CACtCK,IAAIE,IAAJ,CAASC,EAD6B,EAEtCH,IAAII,MAAJ,CAAWM,UAF2B,EAGtCV,IAAII,MAAJ,CAAWC,MAH2B,EAItC,IAAIM,IAAJ,EAJsC,EAKtC,IAAIA,IAAJ,EALsC,CAA5B,CAAZ;AAOA,iBAASC,KAAT,CAAe,gBAAMH,MAAN,CAAaf,OAAOC,MAApB,EAA4B,CACzCK,IAAIE,IAAJ,CAASC,EADgC,EAEzCH,IAAII,MAAJ,CAAWM,UAF8B,EAGzCV,IAAII,MAAJ,CAAWC,MAH8B,EAIzC,IAAIM,IAAJ,EAJyC,EAKzC,IAAIA,IAAJ,EALyC,CAA5B,CAAf,EAOE,UAACE,KAAD,EAAQC,OAAR,EAAiBC,KAAjB,EAA2B;AACzB,UAAIF,KAAJ,EAAW;AACTP,gBAAQC,GAAR,CAAYM,KAAZ;AACAZ,YAAIe,UAAJ,CAAe,GAAf;AACA;AACD;AACDV,cAAQC,GAAR,CAAYO,OAAZ;AACAb,UAAIe,UAAJ,CAAe,GAAf;AACD,KAfH;AAiBD,GA3BD,MA2BO;AACLf,QAAIe,UAAJ,CAAe,GAAf,EADK,CACgB;AACtB;AACF,CA/BD;;AAiCA;AACAnB,OAAOoB,GAAP,CAAW,GAAX,EAAgB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAC5B,MAAID,IAAIE,IAAR,EAAc;AACZ,iBAASU,KAAT,CAAe,gBAAMH,MAAN,CAAaf,OAAOE,cAApB,EAAoC,CAACI,IAAIE,IAAJ,CAASC,EAAV,CAApC,CAAf,EACE,UAACU,KAAD,EAAQC,OAAR,EAAiBC,KAAjB,EAA2B;AACzB,UAAIF,KAAJ,EAAW;AACTP,gBAAQC,GAAR,CAAYM,KAAZ;AACAZ,YAAIe,UAAJ,CAAe,GAAf;AACA;AACD;AACDV,cAAQC,GAAR,CAAYO,OAAZ;AACAb,UAAIiB,IAAJ,CAASJ,OAAT;AACD,KATH;AAWD,GAZD,MAYO;AACLb,QAAIiB,IAAJ,CAAS,EAAT;AACD;AACF,CAhBD;;kBAkBerB,M","file":"visits.js","sourcesContent":["\nimport express from 'express';\nimport dbIniter from './db/db';\nimport mysql from 'mysql';\n\nlet visits = {\n  insert:\n  'INSERT INTO visits \\\n   VALUES (?, ?, ?, ?) \\\n   ON DUPLICATE KEY UPDATE date = ?',\n  selectByUserId:\n  'SELECT v.document_id, v.document_user_id, v.date , d.title \\\n   FROM visits v\\\n   JOIN documents d ON v.document_id = d.id \\\n\t\t\t\t\t\t\t\t\t\tAND v.document_user_id = d.user_id\\\n   WHERE v.user_id = ? \\\n   ORDER BY v.date DESC;'\n}\n\nlet router = express.Router();\n\n// add visit\nrouter.post('/:documentId/:userId', (req, res) => {\n  if (req.user && req.user.id == req.params.userId) {\n    console.log('PARAMS: ', req.params)\n    console.log('BODY: ', req.body)\n    console.log(mysql.format(visits.insert, [\n      req.user.id,\n      req.params.documentId,\n      req.params.userId,\n      new Date(),\n      new Date(),\n    ]));\n    dbIniter.query(mysql.format(visits.insert, [\n      req.user.id,\n      req.params.documentId,\n      req.params.userId,\n      new Date(),\n      new Date(),\n    ]),\n      (error, results, field) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        res.sendStatus(200);\n      }\n    )\n  } else {\n    res.sendStatus(403); // 403 Forbidden\n  }\n})\n\n// get visits by user\nrouter.get('/', (req, res) => {\n  if (req.user) {\n    dbIniter.query(mysql.format(visits.selectByUserId, [req.user.id]),\n      (error, results, field) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        res.json(results);\n      }\n    )\n  } else {\n    res.json({});\n  }\n})\n\nexport default router;"]}