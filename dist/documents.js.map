{"version":3,"sources":["../src/documents.js"],"names":["documents","insert","selectAllByUser","selectByDocumentId","selectById","update","getVersions","router","Router","upload","dest","get","req","res","console","log","format","params","id","query","error","results","fields","sendStatus","download","path","post","user","body","title","json","documentId","parseInt","userId","single","file","originalname","mimetype","encoding","insertId","length","type","session","sessonIdName","sessionID","cookie","cookies","signedCookies","isAuthenticated","field"],"mappings":"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","file":"documents.js","sourcesContent":["\n\nimport express from 'express';\nimport dbIniter from './db/db';\nimport mysql from 'mysql';\nimport multer from 'multer';\n\nlet documents = {\n  insert:\n  'INSERT INTO documents \\\n     VALUES (?, ?, ?, ?, ?, ?)',\n  selectAllByUser:\n  'SELECT * \\\n   FROM documents \\\n   WHERE user_id = ?',\n  selectByDocumentId:\n  'SELECT * \\\n    FROM documents \\\n    WHERE id = ?',\n  selectById:\n  'SELECT * \\\n     FROM documents \\\n     WHERE id = ?\\\n     AND user_id = ?',\n  update:\n  'UPDATE documents \\\n     SET title = ? \\\n     WHERE id = ? \\\n     AND user_id = ?',\n  getVersions:\n  'SELECT d.id, d.user_id, d.title, u.name\\\n   FROM documents d\\\n   JOIN users u ON d.user_id = u.id\\\n   WHERE d.id = ?'\n}\n\nlet router = express.Router();\n\nlet upload = multer({ dest: 'uploads/' });\n\nrouter.get('/download/:id', (req, res) => {\n  console.log(mysql.format(documents.selectByDocumentId, [req.params.id]));\n  dbIniter.query(mysql.format(documents.selectByDocumentId, [req.params.id]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.download(results[0].path);\n    }\n  )\n})\n\nrouter.post('/update/:id', (req, res) => {\n  if (req.user) {\n    dbIniter.query(mysql.format(documents.update, [req.body.title, req.params.id, req.user.id]),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        res.json(results);\n      }\n    )\n  } else {\n    res.json([]);\n  }\n})\n\nrouter.get('/versions/:documentId', (req, res) => {\n  console.log('QUERY', mysql.format(documents.getVersions, [req.params.documentId]));\n  dbIniter.query(mysql.format(documents.getVersions, [req.params.documentId]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\nrouter.get('/:documentId/:userId', (req, res) => {\n  dbIniter.query(mysql.format(documents.selectById,\n    [\n      parseInt(req.params.documentId, 10),\n      parseInt(req.params.userId, 10)\n    ]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.json(results);\n    }\n  )\n})\n\nrouter.post('/upload', upload.single('doc'), (req, res) => {\n  if (req.user) {\n    let file = req.file;\n    // save document info to db\n    dbIniter.query(mysql.format(documents.insert,\n      [\n        0,\n        file.originalname,\n        file.path,\n        file.mimetype,\n        file.encoding,\n        req.user.id,\n      ]),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        res.json({ id: results.insertId });\n      }\n    )\n  } else {\n    res.sendStatus(403); // 403 Forbidden\n  }\n})\n\nrouter.post('/:documentId', (req, res) => {\n  if (req.user) {\n    console.log('QUERY', mysql.format(documents.selectByDocumentId, [req.params.documentId]));\n    dbIniter.query(mysql.format(documents.selectByDocumentId, [req.params.documentId]),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        if (results.length) {\n          dbIniter.query(mysql.format(documents.insert,\n            [\n              results[0].id,\n              results[0].title,\n              results[0].path,\n              results[0].type,\n              results[0].encoding,\n              req.user.id,\n            ]),\n            (error, results, fields) => {\n              if (error) {\n                console.log(error);\n                res.sendStatus(500);\n                return;\n              }\n              console.log(results);\n              res.json({ id: results.insertId });\n            }\n          )\n        } else {\n          res.sendStatus(500);\n        }\n      })\n  } else {\n    res.sendStatus(403) // 403 Forbidden\n  }\n})\n\nrouter.get('/',\n  (req, res) => {\n    console.log('-------- DOCUMENTS --------');\n    console.log('Session', req.session);\n    console.log('SessionIdName: ', req.session.sessonIdName)\n    console.log('SessionId: ', req.session.id)\n    console.log('SessionId: ', req.sessionID)\n    console.log('SessionCookie: ', req.session.cookie)\n    console.log('Cookies: ', req.cookies)\n    console.log('Signed Cookies: ', req.signedCookies)\n    console.log('Auth: ', req.isAuthenticated());\n    console.log('User: ', req.user);\n    if (req.user) {\n      dbIniter.query(mysql.format(documents.selectAllByUser, [req.user.id]),\n        (error, results, field) => {\n          if (error) {\n            console.log(error);\n            res.sendStatus(500);\n            return;\n          }\n          console.log(results);\n          res.json(results);\n        }\n      )\n    } else {\n      res.json({});\n    }\n  })\n\nexport default router"]}