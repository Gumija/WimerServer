{"version":3,"sources":["../src/documents.js"],"names":["documents","insert","selectAllByUser","selectByDocumentId","selectById","update","getVersions","router","Router","upload","dest","get","req","res","id","decode","params","console","log","format","query","error","results","fields","sendStatus","download","path","post","user","body","title","json","documentId","result","encode","user_id","userId","parseInt","single","file","originalname","mimetype","encoding","insertId","length","type","session","sessonIdName","sessionID","cookie","cookies","signedCookies","isAuthenticated","field"],"mappings":"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","file":"documents.js","sourcesContent":["\nimport express from 'express';\nimport dbIniter from './db/db';\nimport mysql from 'mysql';\nimport multer from 'multer';\nimport hasher from './hasher';\n\nlet documents = {\n  insert:\n  'INSERT INTO documents \\\n     VALUES (?, ?, ?, ?, ?, ?)',\n  selectAllByUser:\n  'SELECT * \\\n   FROM documents \\\n   WHERE user_id = ?',\n  selectByDocumentId:\n  'SELECT * \\\n    FROM documents \\\n    WHERE id = ?',\n  selectById:\n  'SELECT * \\\n     FROM documents \\\n     WHERE id = ?\\\n     AND user_id = ?',\n  update:\n  'UPDATE documents \\\n     SET title = ? \\\n     WHERE id = ? \\\n     AND user_id = ?',\n  getVersions:\n  'SELECT d.id, d.user_id, d.title, u.name\\\n   FROM documents d\\\n   JOIN users u ON d.user_id = u.id\\\n   WHERE d.id = ?'\n}\n\nlet router = express.Router();\n\nlet upload = multer({ dest: 'uploads/' });\n\n// download file\nrouter.get('/download/:id', (req, res) => {\n  let id = hasher.decode(req.params.id);\n\n  console.log(mysql.format(documents.selectByDocumentId, [id]));\n  dbIniter.query(mysql.format(documents.selectByDocumentId, [id]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      res.download(results[0].path);\n    }\n  )\n})\n\n// update title\nrouter.post('/update/:id', (req, res) => {\n  if (req.user) {\n    let id = hasher.decode(req.params.id);\n    dbIniter.query(mysql.format(documents.update, [req.body.title, id, req.user.id]),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        res.sendStatus(200);\n      }\n    )\n  } else {\n    res.json([]);\n  }\n})\n\n\n// get versions\nrouter.get('/versions/:documentId', (req, res) => {\n  let documentId = hasher.decode(req.params.documentId);\n  console.log('QUERY', mysql.format(documents.getVersions, [documentId]));\n  dbIniter.query(mysql.format(documents.getVersions, [documentId]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      for (let result of results) {\n        result.id = hasher.encode(result.id);\n        result.user_id = hasher.encode(result.user_id);\n      }\n      res.json(results);\n    }\n  )\n})\n\n// get document information\nrouter.get('/:documentId/:userId', (req, res) => {\n  let documentId = hasher.decode(req.params.documentId);\n  let userId = hasher.decode(req.params.userId);\n  dbIniter.query(mysql.format(documents.selectById,\n    [\n      parseInt(documentId, 10),\n      parseInt(userId, 10)\n    ]),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      for (let result of results) {\n        result.id = hasher.encode(result.id);\n        result.user_id = hasher.encode(result.user_id);\n      }\n      res.json(results);\n    }\n  )\n})\n\n// upload document\nrouter.post('/upload', upload.single('doc'), (req, res) => {\n  if (req.user) {\n    let file = req.file;\n    // save document info to db\n    dbIniter.query(mysql.format(documents.insert,\n      [\n        0,\n        file.originalname,\n        file.path,\n        file.mimetype,\n        file.encoding,\n        req.user.id,\n      ]),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        res.json({\n          id: hasher.encode(results.insertId),\n          userId: hasher.encode(req.user.id),\n        });\n      }\n    )\n  } else {\n    res.sendStatus(403); // 403 Forbidden\n  }\n})\n\n// save document information\nrouter.post('/:documentId', (req, res) => {\n  if (req.user) {\n    let documentId = hasher.decode(req.params.documentId);\n    console.log('QUERY', mysql.format(documents.selectByDocumentId, [documentId]));\n    dbIniter.query(mysql.format(documents.selectByDocumentId, [documentId]),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        if (results.length) {\n          dbIniter.query(mysql.format(documents.insert,\n            [\n              results[0].id,\n              results[0].title,\n              results[0].path,\n              results[0].type,\n              results[0].encoding,\n              req.user.id,\n            ]),\n            (error, results, fields) => {\n              if (error) {\n                console.log(error);\n                res.sendStatus(500);\n                return;\n              }\n              console.log(results);\n              res.json({\n                id: hasher.encode(results.insertId),\n                userId: hasher.encode(req.user.id),\n              });\n            }\n          )\n        } else {\n          res.sendStatus(500);\n        }\n      })\n  } else {\n    res.sendStatus(403) // 403 Forbidden\n  }\n})\n\nrouter.get('/',\n  (req, res) => {\n    console.log('-------- DOCUMENTS --------');\n    console.log('Session', req.session);\n    console.log('SessionIdName: ', req.session.sessonIdName)\n    console.log('SessionId: ', req.session.id)\n    console.log('SessionId: ', req.sessionID)\n    console.log('SessionCookie: ', req.session.cookie)\n    console.log('Cookies: ', req.cookies)\n    console.log('Signed Cookies: ', req.signedCookies)\n    console.log('Auth: ', req.isAuthenticated());\n    console.log('User: ', req.user);\n    if (req.user) {\n      dbIniter.query(mysql.format(documents.selectAllByUser, [req.user.id]),\n        (error, results, field) => {\n          if (error) {\n            console.log(error);\n            res.sendStatus(500);\n            return;\n          }\n          console.log(results);\n          res.json(results);\n        }\n      )\n    } else {\n      res.json({});\n    }\n  })\n\nexport default router"]}