{"version":3,"sources":["../src/highlights.js"],"names":["highlights","insert","delete","selectByDocumentAndUser","router","Router","get","req","res","userId","decode","params","documentId","query","format","error","results","fields","console","log","sendStatus","result","document_id","encode","user_id","json","body","user","id","post","start","end","class","container"],"mappings":"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","file":"highlights.js","sourcesContent":["\nimport express from 'express';\nimport dbIniter from './db/db';\nimport mysql from 'mysql';\nimport hasher from './hasher';\n\nlet highlights = {\n  insert:\n  'INSERT INTO highlights \\\n     VALUES (?, ?, ?, ?, ?, ?, ?)',\n  delete:\n  'DELETE FROM highlights \\\n     WHERE id = ? \\\n     AND document_id = ? \\\n     AND user_id = ?',\n  selectByDocumentAndUser:\n  'SELECT * \\\n     FROM highlights \\\n     WHERE document_id = ? \\\n     AND user_id = ?',\n}\n\nlet router = express.Router();\n\n// get highlights by document and user\nrouter.get('/:documentId/:userId', (req, res) => {\n  let userId = hasher.decode(req.params.userId);\n  let documentId = hasher.decode(req.params.documentId);\n  dbIniter.query(mysql.format(highlights.selectByDocumentAndUser,\n    [\n      documentId,\n      userId,\n    ]\n  ),\n    (error, results, fields) => {\n      if (error) {\n        console.log(error);\n        res.sendStatus(500);\n        return;\n      }\n      console.log(results);\n      for (let result of results) {\n        result.document_id = hasher.encode(result.document_id);\n        result.user_id = hasher.encode(result.user_id);\n      }\n      res.json(results);\n    }\n  )\n})\n\n// delete highlight\nrouter.delete('/', (req, res) => {\n  let userId = hasher.decode(req.body.userId);\n  let documentId = hasher.decode(req.body.documentId);\n  if (userId == req.user.id) {\n    dbIniter.query(mysql.format(highlights.delete,\n      [\n        req.body.id,\n        documentId,\n        userId,\n      ]\n    ),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(fields);\n        res.sendStatus(200);\n      }\n    )\n  } else {\n    res.sendStatus(403); // 403 Forbidden\n  }\n})\n\n// add highlights\nrouter.post('/', (req, res) => {\n  let userId = hasher.decode(req.body.userId);\n  let documentId = hasher.decode(req.body.documentId);\n  if (userId == req.user.id) {\n\n    // save highlight from body\n    dbIniter.query(mysql.format(highlights.insert,\n      [\n        req.body.id,\n        req.body.start,\n        req.body.end,\n        req.body.class,\n        req.body.container,\n        documentId,\n        userId,\n      ]\n    ),\n      (error, results, fields) => {\n        if (error) {\n          console.log(error);\n          res.sendStatus(500);\n          return;\n        }\n        console.log(results);\n        res.sendStatus(200);\n      }\n    )\n  } else {\n    res.sendStatus(403); // 403 Forbidden\n  }\n})\n\nexport default router;"]}